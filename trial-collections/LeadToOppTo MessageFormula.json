{"id":21244,"name":"Lead >> Opp >> Message","description":"Create new lead, generate opportunity, send message","userId":3915,"accountId":4115,"createdDate":"2018-07-30T20:52:07Z","steps":[{"id":123442,"onSuccess":["existsInDestination"],"onFailure":[],"name":"blankStep","type":"script","properties":{"body":"done(true);"}},{"id":122562,"onSuccess":["existsInDestination"],"onFailure":[],"name":"checkIfExistsInDestination","type":"elementRequest","properties":{"elementInstanceId":"${config.oppDestination}","acceptableStatusCodes":"","query":"${steps.createQueryDestination.query}","api":"/${config.oppVDR}","method":"GET"}},{"id":122564,"onSuccess":["getOppInfo"],"onFailure":[],"name":"createInDestination","type":"elementRequest","properties":{"body":"${steps.createOppPayload}","elementInstanceId":"${config.oppDestination}","api":"/${config.oppVDR}","method":"POST"}},{"id":122566,"onSuccess":["postMessage"],"onFailure":[],"name":"createMessage","type":"script","properties":{"body":"const o = steps.createOppPayload;\nconst v = o.amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\nconst i = steps.getOpportunityOwnerInfo.response.body.name;\nconst s = steps.getOppDestElementName.response.body.element.name;\nconst message = {\n  \"text\" : \"A New Opportunity, \" + \"'\" + o.name + \"'\" + \" has arrived in \" + s + \" with an amount of $\" + v + \"! \" + i + \", go close it!\"\n};\ndone(message);"}},{"id":122573,"onSuccess":["createQueryDestination"],"onFailure":[],"name":"createOppPayload","type":"script","properties":{"body":"const l = steps.getSourceInfo.response.body;\nconst d = new Date();\nconst opp = {\n  \"name\": l.firstName + l.lastName + \" Opp\",\n  \"description\": \"Sync'd from\" + trigger.event.elementKey + \" on \" + d,\n  \"closeDate\": \"2018-12-31\",\n  \"stageName\": \"Prospecting\",\n  \"amount\": 10000\n};\ndone(opp);\n"}},{"id":122575,"onSuccess":["checkIfExistsInDestination"],"onFailure":[],"name":"createQueryDestination","type":"script","properties":{"body":"const o = steps.createOppPayload;\n\nif( o !== null && o !== undefined) {\n  if(o.name !== null) {\n  \tdone ({\n    \t\"query\" : {\n    \t\t\"where\": \"name = '\" + o.name + \"'\"\n    \t}\n  \t});\n  } else {\n    done(false);\n  }\n}\ndone(false);"}},{"id":122567,"onSuccess":["gracefulExit"],"onFailure":["createInDestination"],"name":"existsInDestination","type":"filter","properties":{"mimeType":"application/javascript","scriptEngine":"v2","body":"var obj = steps.checkIfExistsInDestination.response.body;\n\nif((obj.length === 0) || obj[0] === null) {\n  done(false);\n} else {\n  done(true);\n}"}},{"id":122570,"onSuccess":["getSourceInfo"],"onFailure":["gracefulExit"],"name":"filterEvent","type":"filter","properties":{"mimeType":"application/javascript","scriptEngine":"v2","body":"switch (trigger.event.elementKey) {\n  case 'hubspot':\n  case 'marketo':\n  case 'constantcontact':\n    break;\n  default:\n    done(false);\n}\nswitch (trigger.event.eventType) {\n  case 'CREATED':\n  case 'UPDATED':\n    break;\n  default:\n    done(false);\n}\nswitch (trigger.event.objectType) {\n  case 'contacts':\n  case 'lead':\n    break;\n  default:\n    done(false);\n}\n//console.log(config);\n//console.log(info);\n//console.log(trigger);\ndone(true);"}},{"id":123436,"onSuccess":["createMessage"],"onFailure":[],"name":"getOppDestElementName","type":"elementRequest","properties":{"elementInstanceId":"${config.oppDestination}","api":"/instances/${config.oppDestination}","method":"GET"}},{"id":122671,"onSuccess":["getOpportunityOwnerInfo"],"onFailure":[],"name":"getOppInfo","type":"elementRequest","properties":{"elementInstanceId":"${config.oppDestination}","api":"/${config.oppVDR}/${steps.createInDestination.response.body.id}","method":"GET"}},{"id":122670,"onSuccess":["getOppDestElementName"],"onFailure":[],"name":"getOpportunityOwnerInfo","type":"elementRequest","properties":{"elementInstanceId":"${config.oppDestination}","api":"/${config.userVDR}/${steps.getOppInfo.response.body.ownerId}","method":"GET"}},{"id":122571,"onSuccess":["createOppPayload"],"onFailure":[],"name":"getSourceInfo","type":"elementRequest","properties":{"elementInstanceId":"${config.leadSource}","api":"/${config.leadVDR}/${trigger.event.objectId}","method":"GET"}},{"id":122572,"onSuccess":[],"onFailure":[],"name":"gracefulExit","type":"filter","properties":{"mimeType":"application/javascript","scriptEngine":"v2","body":"done(true);"}},{"id":122591,"onSuccess":[],"onFailure":[],"name":"postMessage","type":"elementRequest","properties":{"body":"${steps.createMessage}","elementInstanceId":"${config.messageDestination}","api":"/channels/${config.channel}/messages","method":"POST"}},{"id":122577,"onSuccess":["createMessage"],"onFailure":[],"name":"updateInDestination","type":"elementRequest","properties":{"body":"${steps.createOppPayload}","elementInstanceId":"${config.oppDestination}","query":"","api":"/${config.oppVDR}/${steps.checkIfExistsInDestination.response.body[0].id}","method":"PATCH"}}],"triggers":[{"id":19273,"onSuccess":["filterEvent"],"onFailure":[],"type":"event","async":true,"name":"trigger","properties":{"elementInstanceId":"${config.leadSource}"}}],"engine":"v3","active":true,"singleThreaded":false,"debugLoggingEnabled":true,"configuration":[{"id":36141,"key":"channel","name":"channel","type":"value","required":true},{"id":36136,"key":"leadSource","name":"leadSource","type":"elementInstance","required":true},{"id":36137,"key":"leadVDR","name":"leadVDR","type":"value","required":true},{"id":36140,"key":"messageDestination","name":"messageDestination","type":"elementInstance","required":true},{"id":36138,"key":"oppDestination","name":"oppDestination","type":"elementInstance","required":true},{"id":36139,"key":"oppVDR","name":"oppVDR","type":"value","required":true},{"id":36342,"key":"userVDR","name":"userVDR","type":"value","required":true}]}